{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyNames = require( '@stdlib/utils-property-names' );\nvar propertySymbols = require( '@stdlib/utils-property-symbols' );\nvar isNonEnumerable = require( '@stdlib/assert-is-nonenumerable-property' );\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own non-enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own non-enumerable property names and symbols\n*\n* @example\n* var defineProperty = require( '@stdlib/utils-define-property' );\n*\n* var obj = {};\n*\n* obj.a = 'a';\n* defineProperty( obj, 'b', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'b'\n* });\n*\n* var props = nonEnumerableProperties( obj );\n* // returns [ 'b' ]\n*/\nfunction nonEnumerableProperties( value ) {\n\tvar out;\n\tvar tmp;\n\tvar n;\n\tvar i;\n\n\tout = propertyNames( value );\n\tn = 0;\n\tfor ( i = 0; i < out.length; i++ ) {\n\t\tif ( isNonEnumerable( value, out[ i ] ) ) {\n\t\t\tout[ n ] = out[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tout.length = n;\n\n\ttmp = propertySymbols( value );\n\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\tif ( isNonEnumerable( value, tmp[ i ] ) ) {\n\t\t\tout.push( tmp[ i ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nonEnumerableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own non-enumerable property names and symbols.\n*\n* @module @stdlib/utils-nonenumerable-properties\n*\n* @example\n* var defineProperty = require( '@stdlib/utils-define-property' );\n* var nonEnumerableProperties = require( '@stdlib/utils-nonenumerable-properties' );\n*\n* var obj = {};\n*\n* obj.a = 'a';\n* defineProperty( obj, 'b', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'b'\n* });\n*\n* var props = nonEnumerableProperties( obj );\n* // returns [ 'b' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],"names":["propertyNames","require$$0","propertySymbols","require$$1","isNonEnumerable","require$$2","lib","value","out","tmp","n","i","length","push"],"mappings":";;sRAsBA,IAAIA,EAAgBC,EAChBC,EAAkBC,EAClBC,EAAkBC,EAuDtB,IC7BAC,EDCA,SAAkCC,GACjC,IAAIC,EACAC,EACAC,EACAC,EAIJ,IAFAH,EAAMR,EAAeO,GACrBG,EAAI,EACEC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IACvBP,EAAiBG,EAAOC,EAAKG,MACjCH,EAAKE,GAAMF,EAAKG,GAChBD,GAAK,GAMP,IAHAF,EAAII,OAASF,EAEbD,EAAMP,EAAiBK,GACjBI,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IACvBP,EAAiBG,EAAOE,EAAKE,KACjCH,EAAIK,KAAMJ,EAAKE,IAGjB,OAAOH"}